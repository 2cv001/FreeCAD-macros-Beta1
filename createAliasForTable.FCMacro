__Name__   = "Create alias for table"
__Comment__ =""
__Author__ = "2cv001"
__Title__   = "Macro Create Alias For Table"
__Date__    = "2024/01/22"    #YYYY/MM/DD 10:22 Béta
__Version__ = __Date__





import FreeCAD, FreeCADGui
from PySide import QtGui
import re



def get_column(cell):
    column = ''.join([c for c in cell if not c.isdigit()])
    return column 
    
def get_row(cell):
    row = ''.join([c for c in cell if c.isdigit()])
    if row=='' :
        row='1'
    return int(row)  


def generate_column_names():
    columns = []
    for i in range(1, 27):
        columns.append(chr(i+64))  # Add the first 26 letters (A-Z)
    for i in range(27, 703):  # For columns AA to ZZ
        columns.append(chr((i-1)//26+64) + chr((i-1)%26+65))
    return columns



def create_alias_for_table_cells_Selected():
    mySpreadsheet = Gui.ActiveDocument.ActiveView.getSheet()    
    aw = Gui.getMainWindow().centralWidget().activeSubWindow() # Store the active window      
    # To get list of all selected cells
    sel_items = aw.widget().findChild(QtGui.QTableView).selectedIndexes() 

    getCellName = lambda r,c:'{}{}{}'.format(chr(c//26 + 64) if c//26 > 0 else '', chr(c%26 + 65), r + 1)

    columns = generate_column_names()

    for item in sel_items: # The selected cells are scanned

        if  (sel_items[0].column()!=item.column() and sel_items[0].row()!=item.row()) :
            cellName=getCellName(item.row(), item.column())
            firstcellName=getCellName(sel_items[0].row(), sel_items[0].column())
            cellTextLine=get_column(firstcellName)+str(get_row(cellName))
            cellTextColumn=get_column(cellName)+ str(get_row(firstcellName)) 
            try :
                textLine = mySpreadsheet.get(cellTextLine)
                textColumn = mySpreadsheet.get(cellTextColumn)

            except :
                print('Des cellules en première colonne ou en première ligne ne sont pas conformes')
                continue
            textAlias =  textLine + '_'  + textColumn
            mySpreadsheet.setAlias(cellName, textAlias)
                



        
def main():
    create_alias_for_table_cells_Selected()

if __name__ == '__main__':
    main()
